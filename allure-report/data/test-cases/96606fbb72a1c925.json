{
  "uid" : "96606fbb72a1c925",
  "name" : "test_01_weather",
  "fullName" : "test_case.test_index.Test_juhe#test_01_weather",
  "historyId" : "dacd91f2d12fa76f5970bd237242f0be",
  "time" : {
    "start" : 1630054195916,
    "stop" : 1630054196050,
    "duration" : 134
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0 == 1",
  "statusTrace" : "self = <test_index.Test_juhe object at 0x0000017F9147D548>\n\n    @allure.story('test1-1')\n    def test_01_weather(self):\n        url = 'http://apis.juhe.cn/simpleWeather/query'\n        body = {\n            'city': '郴州',\n            'key': 'e3a339c7f9e19a3fae471853d28b69f1',\n        }\n        res = ApiLogin().api_get_weather(url, body)\n        try:\n            assert res.status_code == 200\n            assert res.json()['error_code'] == 1\n        except Exception as e:\n            Logger.error(e)\n>           raise e\n\ntest_case\\test_index.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_index.Test_juhe object at 0x0000017F9147D548>\n\n    @allure.story('test1-1')\n    def test_01_weather(self):\n        url = 'http://apis.juhe.cn/simpleWeather/query'\n        body = {\n            'city': '郴州',\n            'key': 'e3a339c7f9e19a3fae471853d28b69f1',\n        }\n        res = ApiLogin().api_get_weather(url, body)\n        try:\n            assert res.status_code == 200\n>           assert res.json()['error_code'] == 1\nE           assert 0 == 1\n\ntest_case\\test_index.py:20: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0 == 1",
    "statusTrace" : "self = <test_index.Test_juhe object at 0x0000017F9147D548>\n\n    @allure.story('test1-1')\n    def test_01_weather(self):\n        url = 'http://apis.juhe.cn/simpleWeather/query'\n        body = {\n            'city': '郴州',\n            'key': 'e3a339c7f9e19a3fae471853d28b69f1',\n        }\n        res = ApiLogin().api_get_weather(url, body)\n        try:\n            assert res.status_code == 200\n            assert res.json()['error_code'] == 1\n        except Exception as e:\n            Logger.error(e)\n>           raise e\n\ntest_case\\test_index.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_index.Test_juhe object at 0x0000017F9147D548>\n\n    @allure.story('test1-1')\n    def test_01_weather(self):\n        url = 'http://apis.juhe.cn/simpleWeather/query'\n        body = {\n            'city': '郴州',\n            'key': 'e3a339c7f9e19a3fae471853d28b69f1',\n        }\n        res = ApiLogin().api_get_weather(url, body)\n        try:\n            assert res.status_code == 200\n>           assert res.json()['error_code'] == 1\nE           assert 0 == 1\n\ntest_case\\test_index.py:20: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "60bbf4c9ba4c1f71",
      "name" : "log",
      "source" : "60bbf4c9ba4c1f71.txt",
      "type" : "text/plain",
      "size" : 362
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "test1"
  }, {
    "name" : "story",
    "value" : "test1-1"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_index"
  }, {
    "name" : "subSuite",
    "value" : "Test_juhe"
  }, {
    "name" : "host",
    "value" : "mind"
  }, {
    "name" : "thread",
    "value" : "16888-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_index"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "96606fbb72a1c925.json",
  "parameterValues" : [ ]
}